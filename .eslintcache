[{"/home/george/Desktop/react/react-forms/src/index.js":"1","/home/george/Desktop/react/react-forms/src/App.js":"2","/home/george/Desktop/react/react-forms/src/reportWebVitals.js":"3","/home/george/Desktop/react/react-forms/src/standard-form/StandardForm.js":"4","/home/george/Desktop/react/react-forms/src/formik-form/FormikForm.js":"5"},{"size":500,"mtime":1609325645072,"results":"6","hashOfConfig":"7"},{"size":509,"mtime":1611497710227,"results":"8","hashOfConfig":"7"},{"size":362,"mtime":1609325645072,"results":"9","hashOfConfig":"7"},{"size":6007,"mtime":1611490500629,"results":"10","hashOfConfig":"7"},{"size":4926,"mtime":1611507053810,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},"pmkuh0",{"filePath":"15","messages":"16","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"17","messages":"18","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},{"filePath":"19","messages":"20","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"21","usedDeprecatedRules":"14"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/george/Desktop/react/react-forms/src/index.js",[],["24","25"],"/home/george/Desktop/react/react-forms/src/App.js",[],"/home/george/Desktop/react/react-forms/src/reportWebVitals.js",[],"/home/george/Desktop/react/react-forms/src/standard-form/StandardForm.js",["26","27","28","29"],"import React, { Component } from \"react\";\n\nfunction ValidationMessage(props) {\n  if (!props.valid) {\n    return (\n      <div className=\"alert-danger\" role=\"alert\">\n        {props.message}\n      </div>\n    );\n  }\n  return null;\n}\n\nclass StandardForm extends Component {\n  state = {\n    username: \"\",\n    usernameValid: false,\n    email: \"\",\n    emailValid: false,\n    password: \"\",\n    passwordValid: false,\n    confirmPassword: \"\",\n    confirmPasswordValid: false,\n    formValid: false,\n    errorMsg: {},\n  };\n  formValidHandler = () => {\n    const {\n      usernameValid,\n      emailValid,\n      passwordValid,\n      confirmPasswordValid,\n    } = this.state;\n    const formValid =\n      usernameValid && emailValid && passwordValid && confirmPasswordValid;\n    this.setState({ formValid });\n  };\n  usernameValidHandler = () => {\n    const { username } = this.state;\n    let usernameValid = true;\n    const errorMsg = { ...this.state.errorMsg };\n    if (username.length < 5) {\n      errorMsg.username = \"Username length must be more than 5 characters\";\n      usernameValid = false;\n    }\n    this.setState({ usernameValid, errorMsg }, this.formValidHandler);\n  };\n\n  emailValidHandler = () => {\n    const { email } = this.state;\n    let emailValid = true;\n    const re = /^(([^<>()[\\]\\\\.,;:\\s@\\\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n    const errorMsg = { ...this.state.errorMsg };\n    if (!re.test(email.toLowerCase())) {\n      errorMsg.email = \"Email is invalid\";\n      emailValid = false;\n    }\n    this.setState({ emailValid, errorMsg }, this.formValidHandler);\n  };\n\n  passwordValidHandler = () => {\n    const { password } = this.state;\n    let passwordValid = true;\n    const errorMsg = { ...this.state.errorMsg };\n    if (password.length < 5) {\n      errorMsg.password = \"Password length must be more than 5 characters\";\n      passwordValid = false;\n    }\n    this.setState({ passwordValid, errorMsg }, this.formValidHandler);\n  };\n\n  confirmPasswordValidHandler = () => {\n    const { password, confirmPassword } = this.state;\n    let confirmPasswordValid = true;\n    const errorMsg = { ...this.state.errorMsg };\n    if (password !== confirmPassword) {\n      errorMsg.confirmPassword = \"Passwords do not match\";\n      confirmPasswordValid = false;\n    }\n    this.setState({ confirmPasswordValid, errorMsg }, this.formValidHandler);\n  };\n\n  resetForm= (event)=>{\n    event.preventDefault();\n    this.setState({\n      username: \"\",\n      usernameValid: false,\n      email: \"\",\n      emailValid: false,\n      password: \"\",\n      passwordValid: false,\n      confirmPassword: \"\",\n      confirmPasswordValid: false,\n      formValid: false,\n      errorMsg: {},\n    });\n  }\n  render() {\n    return (\n      <div>\n        <h5>Standard form</h5>\n        <form>\n          <div className=\"form-group\">\n            <label htmlFor=\"username\">Username</label>\n            <input\n              type=\"text\"\n              className=\"form-control\"\n              id=\"username\"\n              value={this.state.username}\n              onChange={(e) =>\n                this.setState(\n                  { username: e.target.value },\n                  this.usernameValidHandler\n                )\n              }\n            />\n            <span>\n              <ValidationMessage\n                valid={this.state.usernameValid}\n                message={this.state.errorMsg.username}\n              />\n            </span>\n          </div>\n\n          <div className=\"form-group\">\n            <label htmlFor=\"email\">Email</label>\n            <input\n              type=\"email\"\n              className=\"form-control\"\n              id=\"email\"\n              value={this.state.email}\n              onChange={(e) =>\n                this.setState({ email: e.target.value }, this.emailValidHandler)\n              }\n            />\n            <span>\n              <ValidationMessage\n                valid={this.state.emailValid}\n                message={this.state.errorMsg.email}\n              />\n            </span>\n          </div>\n\n          <div className=\"form-group\">\n            <label htmlFor=\"password\">Password</label>\n            <input\n              type=\"password\"\n              className=\"form-control\"\n              id=\"password\"\n              value={this.state.password}\n              onChange={(e) =>\n                this.setState(\n                  { password: e.target.value },\n                  this.passwordValidHandler\n                )\n              }\n            />\n            <span>\n              <ValidationMessage\n                valid={this.state.passwordValid}\n                message={this.state.errorMsg.password}\n              />\n            </span>\n          </div>\n\n          <div className=\"form-group\">\n            <label htmlFor=\"confirmPassword\">Confirm password</label>\n            <input\n              type=\"password\"\n              className=\"form-control\"\n              id=\"confirmPassword\"\n              value={this.state.confirmPassword}\n              onChange={(e) =>\n                this.setState(\n                  { confirmPassword: e.target.value },\n                  this.confirmPasswordValidHandler\n                )\n              }\n            />\n            <span>\n              <ValidationMessage\n                valid={this.state.confirmPasswordValid}\n                message={this.state.errorMsg.confirmPassword}\n              />\n            </span>\n          </div>\n          <div className=\"btn-group\">\n            <button className=\"btn btn-primary\" type=\"submit\" disabled={!this.state.formValid}>Submit</button>\n            <button className=\"btn btn-danger\" onClick={this.resetForm}>Reset</button>\n          </div>\n        </form>\n        <p>username: {this.state.username}</p>\n        <p>email: {this.state.email}</p>\n        <p>password: {this.state.password}</p>\n        <p>confirmPassword: {this.state.confirmPassword}</p>\n      </div>\n    );\n  }\n}\n\nexport default StandardForm;\n","/home/george/Desktop/react/react-forms/src/formik-form/FormikForm.js",[],{"ruleId":"30","replacedBy":"31"},{"ruleId":"32","replacedBy":"33"},{"ruleId":"34","severity":1,"message":"35","line":52,"column":38,"nodeType":"36","messageId":"37","endLine":52,"endColumn":39,"suggestions":"38"},{"ruleId":"34","severity":1,"message":"35","line":52,"column":63,"nodeType":"36","messageId":"37","endLine":52,"endColumn":64,"suggestions":"39"},{"ruleId":"34","severity":1,"message":"35","line":52,"column":72,"nodeType":"36","messageId":"37","endLine":52,"endColumn":73,"suggestions":"40"},{"ruleId":"34","severity":1,"message":"35","line":52,"column":76,"nodeType":"36","messageId":"37","endLine":52,"endColumn":77,"suggestions":"41"},"no-native-reassign",["42"],"no-negated-in-lhs",["43"],"no-useless-escape","Unnecessary escape character: \\\".","Literal","unnecessaryEscape",["44","45"],["46","47"],["48","49"],["50","51"],"no-global-assign","no-unsafe-negation",{"messageId":"52","fix":"53","desc":"54"},{"messageId":"55","fix":"56","desc":"57"},{"messageId":"52","fix":"58","desc":"54"},{"messageId":"55","fix":"59","desc":"57"},{"messageId":"52","fix":"60","desc":"54"},{"messageId":"55","fix":"61","desc":"57"},{"messageId":"52","fix":"62","desc":"54"},{"messageId":"55","fix":"63","desc":"57"},"removeEscape",{"range":"64","text":"65"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"66","text":"67"},"Replace the `\\` with `\\\\` to include the actual backslash character.",{"range":"68","text":"65"},{"range":"69","text":"67"},{"range":"70","text":"65"},{"range":"71","text":"67"},{"range":"72","text":"65"},{"range":"73","text":"67"},[1292,1293],"",[1292,1292],"\\",[1317,1318],[1317,1317],[1326,1327],[1326,1326],[1330,1331],[1330,1330]]